{"version":3,"sources":["App.styled.tsx","assets/fasten_logo.svg","theme/metrics.ts","theme/colours.ts","components/NavBar/NavBar.styled.tsx","config.ts","components/NavBar/NavBar.tsx","routes/Home/Home.styled.ts","routes/Home/Home.tsx","routes/Package/Package.styled.tsx","requests/payloads/package-payload.ts","requests/errors.ts","requests/utils.ts","requests/payloads/package-module-payload.ts","requests/payloads/package-callable-payload.ts","requests/services/package.ts","components/PackageTable/PackageTable.styled.tsx","components/PackageTable/PackageTable.tsx","routes/Package/Package.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StyledAppContainer","styled","div","minHeight","width","display","flexFlow","margin","padding","baseMetrics","fontSize","xs","sm","md","lg","xl","xxl","fontWeight","light","regular","boldLight","bold","none","tiny","breakpoints","metrics","mediaQueries","Object","keys","reduce","mq","key","baseColours","transparent","white","primary","black","grey","silver","platinum","platinumWhite","highBlue","boyzoneBlue","ntscBlue","royalBlue","fusionRed","desireRed","hibiscusOrange","bronzeOrange","flirtatiousYellow","taxiYellow","reptileGreen","algalGreen","overlay","transparentGrey","colours","informative","positive","negative","warning","StyledContainer","justifyContent","zIndex","backgroundColor","color","StyledNavTitle","marginLeft","marginRight","StyledNavLeft","alignItems","alignContent","StyledNavRight","StyledNavItem","height","StyledNavLink","a","paddingLeft","paddingRight","paddingTop","paddingBottom","transition","alignSelf","transform","config","api","git","webpage","NavLink","props","InternalNavBar","to","src","LogoImage","alt","href","target","React","NavBar","withRouter","marginTop","StyledTitle","p","textAlign","StyledSubtitle","textDecoration","filter","StyledSeachBarInput","position","marginBottom","boxSizing","outline","border","borderRadius","bottom","left","pointerEvents","InternalHome","state","searchQuery","handleSearchQueryChange","bind","handleSearch","e","this","setState","value","history","push","type","name","placeholder","onChange","onKeyDown","Home","h1","StyleRepoLink","StyledDateCreated","h3","StyledTabMenu","StyledTabMenuItem","button","selected","cursor","PACKAGE_SCHEMA","yup","shape","id","integer","required","package_name","forge","project_name","repository","created_at","max","Date","now","nullable","version","defaultPackage","isValidPackageResponsePayload","payload","isValidSync","UNKNOWN_ERROR","APIResponseError","message","debug","uid","uuidv4","Error","getAPIResponseError","error","response","status","msg","values","data","err","sendRequest","method","url","base","responseValidator","axios","URL","JSON","stringify","console","log","PACKAGE_MODULE_SCHEMA","package_version_id","namespace","metadata","PACKAGE_MODULES_PAYLOAD_RESPONSE","array","of","isValidModulesResponsePayload","PACKAGE_CALLABLE_SCHEMA","module_id","fasten_uri","is_internal_call","line_start","line_end","PACKAGE_CALLABLES_PAYLOAD_RESPONSE","isValidCallablesResponsePayload","getModules","pkg","ver","String","Format","getCallables","StyledVersionRow","InternalPackageTable","renderModuleRow","entity","pkgVersion","renderCallableRow","isLoading","undefined","retrieveEntities","dt","kind","entities","map","getTitle","renderRows","PackageTable","InternalPackage","TabMenuItem","tabIndex","index","onClick","label","tabs","body","retrievePackage","pkgParam","match","params","pkga","verParam","moduleParam","callableParam","TabBody","length","toLocaleDateString","tab","Package","InternalApp","window","location","origin","includes","split","exact","path","render","component","App","Boolean","hostname","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.64fb706c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StyledAppContainer = styled.div({\n  minHeight: \"100%\",\n  width: \"100%\",\n\n  display: \"flex\",\n  flexFlow: \"column\",\n\n  margin: 0,\n  padding: 0,\n});\n","export default __webpack_public_path__ + \"static/media/fasten_logo.621b8d55.svg\";","type MetricsType = { [type: string]: { [size: string]: any } };\n\nconst baseMetrics: MetricsType = {\n  fontSize: {\n    xs: 8,\n    sm: 10,\n    md: 14,\n    lg: 18,\n    xl: 22,\n    xxl: 30,\n  },\n  fontWeight: {\n    light: 300,\n    regular: 400,\n    boldLight: 600,\n    bold: 700,\n  },\n  padding: {\n    none: 0,\n    tiny: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 36,\n    xxl: 48,\n  },\n  margin: {\n    none: 0,\n    tiny: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 36,\n    xxl: 48,\n  },\n  breakpoints: {\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920,\n  },\n};\n\n// Nasty\ntype MediaQueries = {\n  [bkpt in keyof typeof baseMetrics[\"breakpoints\"]]: string;\n};\n\nconst metrics: MetricsType = {\n  ...baseMetrics,\n\n  // This gives us media queries from our breakpoints\n  mediaQueries: Object.keys(baseMetrics.breakpoints).reduce(\n    (mq: { [size: string]: string }, key: string) => {\n      mq[key] = `@media (min-width: ${baseMetrics.breakpoints[key]}px)`;\n      return mq;\n    },\n    {}\n  ) as MediaQueries,\n};\n\nexport default metrics;\n","// https://coolors.co/f34b67-415a77-778da9-e0e1dd-2f2e41\n\nconst baseColours = {\n  transparent: \"transparent\",\n  white: \"#fff\",\n\n  primary: \"#00A6D6\",\n\n  /** Greys */\n  black: \"#2f2e41\",\n  grey: \"#9d9d9d\",\n  silver: \"#a5b1c2\",\n  platinum: \"#e0e1dd\",\n  platinumWhite: \"#f8f9f9\",\n\n  highBlue: \"#45aaf2\",\n  boyzoneBlue: \"#2d98da\",\n  ntscBlue: \"#4b7bec\",\n  royalBlue: \"#3867d6\",\n\n  fusionRed: \"#fc5c65\",\n  desireRed: \"#eb3b5a\",\n\n  hibiscusOrange: \"#fd9644\",\n  bronzeOrange: \"#fa8231\",\n\n  flirtatiousYellow: \"#fed330\",\n  taxiYellow: \"#f7b731\",\n\n  reptileGreen: \"#26de81\",\n  algalGreen: \"#20bf6b\",\n\n  overlay: \"rgba(80, 80, 80, 0.7)\",\n  transparentGrey: \"#9d9d9daa\",\n};\n\nconst colours = {\n  ...baseColours,\n\n  /** Action colours */\n  informative: baseColours.boyzoneBlue,\n  positive: baseColours.algalGreen,\n  negative: baseColours.desireRed,\n  warning: baseColours.taxiYellow,\n};\n\nexport default colours;\n","import metrics from \"../../theme/metrics\";\nimport colours from \"../../theme/colours\";\nimport styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled(\"nav\")({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  minHeight: \"70px\",\n  zIndex: 10,\n  backgroundColor: colours.primary,\n  color: colours.white,\n  padding: \"15px 0\",\n});\n\nexport const StyledNavTitle = styled.div({\n  marginLeft: metrics.margin.lg,\n  marginRight: metrics.margin.md,\n  width: \"15%\",\n});\n\nexport const StyledNavLeft = styled.div({\n  display: \"flex\",\n  alignItems: \"center\",\n  alignContent: \"flex-start\",\n});\n\nexport const StyledNavRight = styled.div({\n  display: \"flex\",\n  alignItems: \"center\",\n  alignContent: \"flex-end\",\n});\n\nexport const StyledNavItem = styled.div({\n  display: \"flex\",\n  alignItems: \"flex-start\",\n  height: \"100%\",\n});\n\nexport const StyledNavLink = styled.a({\n  fontSize: metrics.fontSize.xl,\n\n  paddingLeft: metrics.padding.none,\n  paddingRight: metrics.padding.xl,\n  paddingTop: metrics.padding.tiny,\n  paddingBottom: metrics.padding.tiny,\n\n  color: colours.white,\n  transition: \"0.4s ease\",\n\n  alignSelf: \"center\",\n\n  \":hover\": {\n    color: colours.platinum,\n    transform: \"scale(1.1)\",\n  },\n});\n","const config = {\n  // api: \"http://127.0.0.1:8080\",\n  api: \"http://api.fasten-project.eu\",\n  git: \"https://github.com/fasten-project/\",\n  webpage: \"http://fasten-project.eu/\",\n};\n\nexport default config;\n","import * as React from \"react\";\nimport LogoImage from \"../../assets/fasten_logo.svg\";\nimport {\n  StyledContainer,\n  StyledNavLeft,\n  StyledNavRight,\n  StyledNavLink,\n  StyledNavTitle,\n  StyledNavItem,\n} from \"./NavBar.styled\";\nimport { withRouter, RouteComponentProps, Link } from \"react-router-dom\";\nimport { AiFillGithub, AiFillHome } from \"react-icons/ai\";\nimport config from \"../../config\";\n\nexport interface NavBarProps extends RouteComponentProps {}\n\nexport interface NavBarState {}\n\nconst NavLink: React.FunctionComponent<{ href: string; target: string }> = (\n  props\n) => (\n  <StyledNavItem>\n    <StyledNavLink {...props} />\n  </StyledNavItem>\n);\n\nclass InternalNavBar extends React.Component<NavBarProps, NavBarState> {\n  render() {\n    return (\n      <StyledContainer>\n        <StyledNavLeft>\n          <Link to={\"/home\"}>\n            <StyledNavTitle>\n              <img\n                width={\"100%\"}\n                src={LogoImage}\n                alt={\n                  \"FASTEN, Developing an intelligent software package management systems.\"\n                }\n              />\n            </StyledNavTitle>\n          </Link>\n        </StyledNavLeft>\n        <StyledNavRight>\n          <NavLink href={config.webpage} target={\"_blank\"}>\n            <AiFillHome />\n          </NavLink>\n          <NavLink href={config.git} target={\"_blank\"}>\n            <AiFillGithub />\n          </NavLink>\n        </StyledNavRight>\n      </StyledContainer>\n    );\n  }\n}\n\nexport const NavBar = withRouter(InternalNavBar);\n","import styled from \"@emotion/styled\";\nimport metrics from \"../../theme/metrics\";\nimport colours from \"../../theme/colours\";\n\nexport const StyledContainer = styled.div({\n  marginTop: \"10%\",\n  width: \"100%\",\n});\n\nexport const StyledTitle = styled.p({\n  width: \"45%\",\n  margin: \"auto\",\n  fontSize: metrics.fontSize.xl,\n  textAlign: \"center\",\n});\n\nexport const StyledSubtitle = styled.p({\n  textAlign: \"center\",\n  \"& a\": {\n    color: colours.primary,\n    textDecoration: \"none\",\n    \":hover\": {\n      filter: \"brightness(85%)\",\n    },\n  },\n});\n\n/**\n * Text Field element\n */\nexport const StyledSeachBarInput = styled.div({\n  position: \"relative\",\n  width: \"60%\",\n  zIndex: 1,\n  margin: \"50px auto\",\n  marginBottom: metrics.margin.sm,\n\n  // Input Field\n  \"& input\": {\n    boxSizing: \"border-box\",\n    outline: \"none\",\n    border: \"none\",\n\n    fontSize: metrics.fontSize.xxl,\n    color: \"#666666\",\n    display: \"block\",\n    width: \"100%\",\n    backgroundColor: \"#e6e6e6\",\n    height: 70,\n    borderRadius: 35,\n    padding: \"0 30px 0 100px\",\n\n    // Focused input field affects icon prefix.\n    \":focus + span\": {\n      color: colours.primary,\n      paddingLeft: metrics.padding.lg,\n    },\n  },\n\n  // Icon Prefix\n  \"& span\": {\n    fontSize: metrics.fontSize.xxl,\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    borderRadius: 25,\n    bottom: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    paddingLeft: metrics.padding.lg + 10,\n    pointerEvents: \"none\",\n    color: \"#666666\",\n    transition: \"all 0.4s\",\n  },\n});\n","import * as React from \"react\";\nimport { NavBar } from \"../../components/NavBar\";\nimport {\n  StyledContainer,\n  StyledSeachBarInput,\n  StyledSubtitle,\n  StyledTitle,\n} from \"./Home.styled\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\n/**\n * Props for the Home route.\n */\nexport interface HomeProps {}\n\n/**\n * State for the Package route.\n */\nexport interface HomeState {\n  /** The search query for looking up the package. */\n  searchQuery: string;\n}\n\n/**\n * The home page of the application.\n * Displays the text input bar for package search.\n */\nclass InternalHome extends React.Component<\n  RouteComponentProps<HomeProps>,\n  HomeState\n> {\n  constructor(props: RouteComponentProps<HomeProps>, state: HomeState) {\n    super(props, state);\n    this.state = {\n      searchQuery: \"\",\n    };\n    this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  /**\n   * Handle change in the search query input element.\n   * @param {React.ChangeEvent} e - change event object.\n   */\n  handleSearchQueryChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  }\n\n  /**\n   * Handle search action for the package (key press callback).\n   * @param {React.KeyboardEvent} e - keyboard event object.\n   */\n  handleSearch(e: React.KeyboardEvent) {\n    if (e.key == \"Enter\")\n      this.props.history.push(`/packages/${this.state.searchQuery}`);\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <StyledContainer>\n          <StyledTitle>\n            Learn about robustness and security of the packages in your software\n            ecosystem.\n          </StyledTitle>\n\n          <StyledSeachBarInput>\n            <input\n              type={\"text\"}\n              name={\"search\"}\n              placeholder={\"Search packages (ex. junit:junit)\"}\n              value={this.state.searchQuery}\n              onChange={this.handleSearchQueryChange}\n              onKeyDown={this.handleSearch}\n            />\n            <span>\n              <AiOutlineSearch />\n            </span>\n          </StyledSeachBarInput>\n\n          <StyledSubtitle>\n            Learn more about{\" \"}\n            <a href={\"https://www.fasten-project.eu/view/Main/Overview\"}>\n              concept\n            </a>{\" \"}\n            and{\" \"}\n            <a href={\"https://www.fasten-project.eu/view/Main/Use-cases\"}>\n              use cases\n            </a>\n            .\n          </StyledSubtitle>\n        </StyledContainer>\n      </>\n    );\n  }\n}\n\nexport const Home = withRouter(InternalHome);\n","import styled from \"@emotion/styled\";\nimport metrics from \"../../theme/metrics\";\nimport colours from \"../../theme/colours\";\nimport { TabProps } from \"./TabProps\";\n\nexport const StyledContainer = styled.div({\n  width: \"50%\",\n  margin: \"5% auto\",\n});\n\nexport const StyledTitle = styled.h1({\n  margin: 0,\n  marginBottom: 15,\n});\n\nexport const StyleRepoLink = styled.a({\n  marginLeft: metrics.margin.sm,\n  fontSize: metrics.fontSize.xl,\n  color: colours.primary,\n  textDecoration: \"none\",\n  \":hover\": {\n    filter: \"brightness(80%)\",\n  },\n});\n\nexport const StyledDateCreated = styled.h3({\n  display: \"inline-block\",\n  color: colours.grey,\n  margin: 0,\n});\n\nexport const StyledTabMenu = styled.div({\n  marginTop: 25,\n});\n\nexport const StyledTabMenuItem = styled.button<TabProps>((props) => ({\n  padding: \"5px 10px\",\n  border: \"none\",\n  outline: \"none\",\n  transition: \"ease 0.15s\",\n  backgroundColor: props.selected ? colours.primary : \"revert\",\n  color: props.selected ? colours.white : \"revert\",\n\n  \":hover\": {\n    backgroundColor: colours.primary,\n    transform: \"scale(1.05)\",\n    color: colours.white,\n    cursor: \"pointer\",\n  },\n}));\n","import * as yup from \"yup\";\n\n/**\n * Validation schema for {@link Package}.\n */\nexport const PACKAGE_SCHEMA = yup\n  .object()\n  .shape({\n    /** Unique identifier of the package. */\n    id: yup.number().integer().positive().required(),\n\n    /** Unique package name (e.g., junit:junit). */\n    package_name: yup.string().required(),\n\n    /** Forge of the package (mvn, pypi, debian). */\n    forge: yup.string().required(),\n\n    /** Readable project name (e.g., JUnit). */\n    project_name: yup.string().required(),\n\n    /** The repository source of the package. */\n    repository: yup.string().required(),\n\n    /** The date when the package was published. */\n    created_at: yup.date().max(new Date(Date.now())).nullable(),\n\n    /** The latest version of the package. */\n    version: yup.string(),\n  })\n  .required();\n\n/**\n * The type of the Package instance generated from yup schema {@link PACKAGE_SCHEMA}.\n */\nexport type Package = yup.InferType<typeof PACKAGE_SCHEMA>;\n\n/**\n * Default object for {@link Package}\n */\nexport const defaultPackage: Package = {\n  id: 0,\n  package_name: \"\",\n  forge: \"mvn\",\n  project_name: \"\",\n  repository: \"\",\n  created_at: null,\n};\n\n/**\n * Validates that the given response payload is as expected.\n * @param {any} payload - the response payload.\n * @returns {boolean} - whether or not the payload is type-safe for {@link Package}.\n */\nexport function isValidPackageResponsePayload(\n  payload: any\n): payload is Package {\n  return PACKAGE_SCHEMA.isValidSync(payload);\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport const UNKNOWN_ERROR =\n  \"An unknown error has occurred! Please try again later!\";\nexport const INTERNET_ERROR =\n  \"Please check your internet connection and try again!\";\n\n/**\n * Interface to represent a user-friendly error.\n *\n * Should be used for exceptions that can be supplemented by\n * an additional debug message, separate from a user-friendly message.\n */\nexport interface UserError {\n  /** unique identifier */\n  uid: string;\n\n  /** User friendly message */\n  message: string;\n\n  /** Debug message */\n  debug: string;\n}\n\n/**\n * Error class representing API Response errors\n */\nexport class APIResponseError extends Error implements UserError {\n  public readonly name = \"APIResponseError\";\n  public readonly uid = uuidv4();\n\n  debug: string;\n\n  /**\n   * Creates a new API Response Error instance\n   *\n   * @param message User-friendly message\n   * @param debug Debug message\n   */\n  constructor(message: string, debug: string) {\n    super(message);\n    this.debug = debug;\n  }\n}\n\n/**\n * Method for getting responsive error instance.\n * Converts {AxiosError} into custom {APIResponseError}.\n * @param error\n * @returns instance of {APIResponseError} with UI-friendly message.\n */\nexport const getAPIResponseError = (error: any): APIResponseError => {\n  if (!error.response) {\n    // no response -> connectivity issues\n    return new APIResponseError(\n      INTERNET_ERROR,\n      \"Bad Response: \" + error.message\n    );\n  } else if (error.response.status < 500) {\n    // if server processed, but request was not fulfilled (4xx errors)\n\n    let msg: string;\n\n    try {\n      // Although not supposed, API may theoretically return inline error message.\n      msg = Object.values<string>(error.response.data)[0];\n    } catch (err) {\n      // In case response error from backend is of unrecognizable structure,\n      // return unknown error message.\n      msg = UNKNOWN_ERROR;\n    }\n\n    return new APIResponseError(msg, \"Bad Response: \" + error.message);\n  } else {\n    // if server has failed (5xx errors)\n    return new APIResponseError(\n      UNKNOWN_ERROR,\n      \"Server has failed: \" + error.message\n    );\n  }\n};\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { APIResponseError, getAPIResponseError } from \"./errors\";\n\n/**\n * Auxiliary function to handle the common function of sending an API request,\n * validating the payload and throwing the necessary errors with descriptive messages.\n *\n * @param method HTTP verb - e.g. `get`, `patch`, `post`\n * @param url the path part of the endpoint\n * @param base the base url of the endpoint\n * @param responseValidator A function with a type guard that asserts that that\n *                          response from the API is of type `ResponseT`\n * @param data The data to send as the request body.\n * @param config Extra config for the Axios request.\n */\nexport async function sendRequest<RequestT, ResponseT>(\n  method: AxiosRequestConfig[\"method\"],\n  url: string,\n  base: string,\n  responseValidator: (data: any) => data is ResponseT,\n  config?: AxiosRequestConfig,\n  data?: RequestT\n): Promise<ResponseT> {\n  try {\n    const response = await axios(new URL(url, base).href, {\n      method,\n      data,\n      ...config,\n    });\n\n    if (responseValidator(response.data)) {\n      return response.data;\n    } else {\n      throw new APIResponseError(\n        \"Received malformed API data!\",\n        `Data received: ${JSON.stringify(response.data)}`\n      );\n    }\n  } catch (error) {\n    // If the error is already APIResponseError, we don't need to dive into it\n    if (error instanceof APIResponseError) {\n      throw error;\n    } else {\n      console.log(error.debug);\n      throw getAPIResponseError(error);\n    }\n  }\n}\n","import * as yup from \"yup\";\nimport { array } from \"yup\";\n\n/**\n * Validation schema for {@link Module}.\n */\nexport const PACKAGE_MODULE_SCHEMA = yup\n  .object()\n  .shape({\n    /** Unique identifier of the module. */\n    id: yup.number().integer().positive().required(),\n\n    /** Unique identifier of the package version for the module. */\n    package_version_id: yup.number().integer().positive().required(),\n\n    /** The module's namespace (class name). */\n    namespace: yup.string().required(),\n\n    /** The date when the module was published. */\n    created_at: yup.date().max(new Date(Date.now())).nullable(),\n\n    /** Additional metadata available for the module. */\n    metadata: yup.object().nullable(),\n  })\n  .required();\n\n/**\n * Validation schema for {@link ModulesResponsePayload}\n */\nexport const PACKAGE_MODULES_PAYLOAD_RESPONSE = array().of(\n  PACKAGE_MODULE_SCHEMA\n);\n\n/**\n * The type of the Module instance generated from yup schema {@link PACKAGE_MODULE_SCHEMA}.\n */\nexport type Module = yup.InferType<typeof PACKAGE_MODULE_SCHEMA>;\n\n/**\n * Modules entity response payload\n */\nexport type ModulesResponsePayload = Module[];\n\n/**\n * Default object for {@link Module}\n */\nexport const defaultModule: Module = {\n  id: 0,\n  package_version_id: 0,\n  namespace: \"\",\n  created_at: null,\n  metadata: null,\n};\n\n/**\n * Validates that the given response payload is as expected.\n * @param {any} payload - the response payload.\n * @returns {boolean} - whether or not the payload is type-safe for {@link ModulesResponsePayload}.\n */\nexport function isValidModulesResponsePayload(\n  payload: any\n): payload is ModulesResponsePayload {\n  return PACKAGE_MODULES_PAYLOAD_RESPONSE.isValidSync(payload);\n}\n","import * as yup from \"yup\";\nimport { array } from \"yup\";\n\n/**\n * Validation schema for {@link Callable}.\n */\nexport const PACKAGE_CALLABLE_SCHEMA = yup\n  .object()\n  .shape({\n    /** Unique identifier of the callable. */\n    id: yup.number().integer().positive().required(),\n\n    /** Unique identifier of the package module for the callable. */\n    module_id: yup.number().integer().positive().required(),\n\n    /** The URI in the FASTEN system. */\n    fasten_uri: yup.string().required(),\n\n    /** Is the callable internal within the package? */\n    is_internal_call: yup.boolean().required(),\n\n    /** The start line of the callable. */\n    line_start: yup.number().integer().required(),\n\n    /** The end line of the callable. */\n    line_end: yup.number().integer().required(),\n\n    /** The date when the callable was published. */\n    created_at: yup.date().max(new Date(Date.now())).nullable(),\n\n    /** Additional metadata available for the callable. */\n    metadata: yup.object().nullable(),\n  })\n  .required();\n\n/**\n * Validation schema for {@link CallablesResponsePayload}\n */\nexport const PACKAGE_CALLABLES_PAYLOAD_RESPONSE = array().of(\n  PACKAGE_CALLABLE_SCHEMA\n);\n\n/**\n * The type of the Callable instance generated from yup schema {@link PACKAGE_MODULE_SCHEMA}.\n */\nexport type Callable = yup.InferType<typeof PACKAGE_CALLABLE_SCHEMA>;\n\n/**\n * Callable entities response payload\n */\nexport type CallablesResponsePayload = Callable[];\n\n/**\n * Default object for {@link Callable}\n */\nexport const defaultCallable: Callable = {\n  id: 0,\n  module_id: 0,\n  fasten_uri: \"\",\n  is_internal_call: true,\n  line_start: 0,\n  line_end: 0,\n  created_at: null,\n  metadata: null,\n};\n\n/**\n * Validates that the given response payload is as expected.\n * @param {any} payload - the response payload.\n * @returns {boolean} - whether or not the payload is type-safe for {@link CallablesResponsePayload}.\n */\nexport function isValidCallablesResponsePayload(\n  payload: any\n): payload is CallablesResponsePayload {\n  return PACKAGE_CALLABLES_PAYLOAD_RESPONSE.isValidSync(payload);\n}\n","import { String } from \"typescript-string-operations\";\nimport config from \"../../config\";\nimport { sendRequest } from \"../utils\";\nimport { isValidPackageResponsePayload } from \"../payloads/package-payload\";\nimport { isValidModulesResponsePayload } from \"../payloads/package-module-payload\";\nimport { isValidCallablesResponsePayload } from \"../payloads/package-callable-payload\";\n\n/**\n * Endpoint for retrieving the package entity.\n * Requires additional parameters: `/api/mvn/packages/{name}`.\n */\nexport const PACKAGE_ENDPOINT = \"/api/mvn/packages/{0}\";\n\n/**\n * Endpoint for retrieving the package modules.\n * Requires additional parameters: `/api/mvn/packages/{name}/{version}/modules`.\n */\nexport const PACKAGE_MODULES_ENDPOINT = \"/api/mvn/packages/{0}/{1}/modules\";\n\n/**\n * Endpoint for retrieving the package callables.\n * Requires additional parameters: `/api/mvn/packages/{name}/{version}/callables`.\n */\nexport const PACKAGE_CALLABLES_ENDPOINT = \"/api/mvn/packages/{0}/{1}/callables\";\n\n/**\n * The request for retrieving the package entity.\n * @param {string} pkg - the name of the wanted package.\n */\nexport function getPackage(pkg: string) {\n  return sendRequest(\n    \"get\",\n    String.Format(PACKAGE_ENDPOINT, pkg),\n    config.api,\n    isValidPackageResponsePayload,\n    {}\n  );\n}\n\n/**\n * The request for retrieving the package modules.\n * @param {string} pkg - the name of the package.\n * @param {string} ver - the version of the package.\n */\nexport function getModules(pkg: string, ver: string) {\n  return sendRequest(\n    \"get\",\n    String.Format(PACKAGE_MODULES_ENDPOINT, pkg, ver),\n    config.api,\n    isValidModulesResponsePayload,\n    {}\n  );\n}\n\n/**\n * The request for retrieving the package callables.\n * @param {string} pkg - the name of the package.\n * @param {string} ver - the version of the package.\n */\nexport function getCallables(pkg: string, ver: string) {\n  return sendRequest(\n    \"get\",\n    String.Format(PACKAGE_CALLABLES_ENDPOINT, pkg, ver),\n    config.api,\n    isValidCallablesResponsePayload,\n    {}\n  );\n}\n","import styled from \"@emotion/styled\";\nimport metrics from \"../../theme/metrics\";\n\nexport const StyledContainer = styled.div({\n  margin: \"8% auto\",\n});\n\nexport const StyledVersionRow = styled.p({\n  fontSize: metrics.fontSize.xl,\n  marginTop: metrics.margin.lg,\n});\n","import * as React from \"react\";\nimport { withRouter, RouteComponentProps, Link } from \"react-router-dom\";\nimport { StyledContainer, StyledVersionRow } from \"./PackageTable.styled\";\nimport { Module } from \"../../requests/payloads/package-module-payload\";\nimport { getCallables, getModules } from \"../../requests/services/package\";\nimport { Callable } from \"../../requests/payloads/package-callable-payload\";\n\ntype ModulesTableData = {\n  kind: \"MODULES\";\n  entities: Module[];\n};\n\ntype CallablesTableData = {\n  kind: \"CALLABLES\";\n  entities: Callable[];\n};\n\n/**\n * The type model of the table entity.\n * Discriminated union of {@link Module} and {@link @Callable}.\n */\ntype TableData = ModulesTableData | CallablesTableData | undefined;\n\n/**\n * The props of the package table component.\n */\nexport interface PackageTableProps extends RouteComponentProps {\n  /** The type of entities included in the table. */\n  kind: \"MODULES\" | \"CALLABLES\";\n\n  /** The package name for which table is rendered. */\n  pkg: string;\n\n  /** The package version for which table is rendered. */\n  pkgVersion: string;\n}\n\n/**\n * The state of the package table component.\n */\nexport interface PackageTableState {\n  /** Indicator of the current state; whether or not the page is loading. */\n  isLoading: boolean;\n\n  /** The list of entities included in the table. */\n  data: TableData;\n}\n\nclass InternalPackageTable extends React.Component<\n  PackageTableProps,\n  PackageTableState\n> {\n  constructor(props: PackageTableProps, state: PackageTableState) {\n    super(props, state);\n\n    this.state = {\n      isLoading: true,\n      data: undefined,\n    };\n  }\n\n  componentDidMount(): void {\n    void this.retrieveEntities();\n  }\n\n  /**\n   * The method to retrieve the table entities by API.\n   * Depends on kind of the table.\n   */\n  async retrieveEntities() {\n    this.setState({\n      isLoading: true,\n    });\n\n    const { pkg, pkgVersion } = this.props;\n\n    try {\n      let dt: TableData = undefined;\n\n      switch (this.props.kind) {\n        case \"MODULES\":\n          dt = {\n            kind: \"MODULES\",\n            entities: await getModules(pkg, pkgVersion),\n          };\n          break;\n        case \"CALLABLES\":\n          dt = {\n            kind: \"CALLABLES\",\n            entities: await getCallables(pkg, pkgVersion),\n          };\n          break;\n        default:\n          return;\n      }\n\n      this.setState({\n        isLoading: false,\n        data: dt,\n      });\n    } catch (error) {\n      // 404?\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  /**\n   * Returns the title of the table depending on kind.\n   */\n  getTitle(): string {\n    switch (this.props.kind) {\n      case \"MODULES\":\n        return \"Modules\";\n      case \"CALLABLES\":\n        return \"Callables\";\n      default:\n        return \"Unknown\";\n    }\n  }\n\n  /**\n   * Renders the package module entity.\n   * @param entity is {@link Module} to render.\n   */\n  renderModuleRow = (entity: Module): React.ReactNode => {\n    const { pkg, pkgVersion } = this.props;\n    return (\n      <StyledVersionRow key={`module_${entity.id}`}>\n        <Link to={`/packages/${pkg}/${pkgVersion}/${entity.namespace}`}>\n          {entity.namespace}\n        </Link>\n      </StyledVersionRow>\n    );\n  };\n\n  /**\n   * Renders the package callable entity.\n   * @param entity is {@link Callable} to render.\n   *\n   * TODO: Replace `default` module with actual module of the callable.\n   *       The problem: callable instance contains only id of module, not namespace.\n   */\n  renderCallableRow = (entity: Callable): React.ReactNode => {\n    const { pkg, pkgVersion } = this.props;\n    return (\n      <StyledVersionRow key={`callable_${entity.id}`}>\n        <Link\n          to={`/packages/${pkg}/${pkgVersion}/default/${entity.fasten_uri}`}\n        >\n          {entity.fasten_uri}\n        </Link>\n      </StyledVersionRow>\n    );\n  };\n\n  renderRows(): React.ReactNode {\n    switch (this.state.data?.kind) {\n      case \"MODULES\":\n        return this.state.data?.entities.map(this.renderModuleRow);\n      case \"CALLABLES\":\n        return this.state.data?.entities.map(this.renderCallableRow);\n      default:\n        return <h1>Unknown Type {this.state.data?.kind}</h1>;\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <></>;\n    }\n\n    return (\n      <StyledContainer>\n        <h3>{this.getTitle()}</h3>\n        <hr />\n        {this.renderRows()}\n      </StyledContainer>\n    );\n  }\n}\n\nexport const PackageTable = withRouter(InternalPackageTable);\n","import * as React from \"react\";\nimport { Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { NavBar } from \"../../components/NavBar\";\nimport {\n  StyledContainer,\n  StyledDateCreated,\n  StyledTabMenu,\n  StyledTabMenuItem,\n  StyledTitle,\n  StyleRepoLink,\n} from \"./Package.styled\";\nimport { GoRepo } from \"react-icons/go\";\nimport {\n  defaultPackage,\n  Package as PackageModel,\n} from \"../../requests/payloads/package-payload\";\nimport { getPackage } from \"../../requests/services/package\";\nimport { PackageTable } from \"../../components/PackageTable\";\n\n/**\n * Props for the Package route.\n */\nexport interface PackageProps {\n  /** The package name passed through URL route param. */\n  pkgParam: string;\n\n  /** The version of the package passed through URL route param. */\n  verParam: string;\n\n  /** The module name of the package passed through URL route param. */\n  moduleParam: string;\n\n  /** The callable (FASTEN URI) of the package passed through URL route param. */\n  callableParam: string;\n}\n\n/**\n * State for the Package route.\n */\nexport interface PackageState {\n  /** Indicator of the current state; whether or not the page is loading. */\n  isLoading: boolean;\n\n  /** The loaded Package instance from API. */\n  pkg: PackageModel;\n\n  /** Index of the currently selected tab. */\n  tabIndex: number;\n\n  /** The list of available tabs on the page. */\n  tabs: Array<Tab>;\n}\n\n/**\n * The data interface for the Tab element.\n */\ninterface Tab {\n  /** The label to display for this tab. */\n  label: string;\n\n  /** The content component of this tab. */\n  body: React.FunctionComponent;\n}\n\n/**\n * The package overview page.\n * Displays overview of versions, dependencies, modules, callables and vulnerabilities.\n */\nclass InternalPackage extends React.Component<\n  RouteComponentProps<PackageProps>,\n  PackageState\n> {\n  constructor(props: RouteComponentProps<PackageProps>, state: PackageState) {\n    super(props, state);\n\n    this.state = {\n      isLoading: true,\n      pkg: defaultPackage,\n      tabIndex: 0,\n      tabs: [\n        {\n          label: \"Modules\",\n          body: () => {\n            return (\n              <PackageTable\n                kind={\"MODULES\"}\n                pkg={this.state.pkg.package_name}\n                pkgVersion={this.state.pkg.version}\n              />\n            );\n          },\n        },\n        {\n          label: \"Callables\",\n          body: () => (\n            <PackageTable\n              kind={\"CALLABLES\"}\n              pkg={this.state.pkg.package_name}\n              pkgVersion={this.state.pkg.version}\n            />\n          ),\n        },\n      ],\n    };\n  }\n\n  componentDidMount(): void {\n    void this.retrievePackage();\n  }\n\n  /**\n   * Method to retrieve and initialize the package from API.\n   */\n  async retrievePackage() {\n    this.setState({\n      isLoading: true,\n    });\n\n    const { pkgParam } = this.props.match.params;\n\n    try {\n      const pkga: PackageModel = await getPackage(pkgParam);\n\n      this.setState({\n        isLoading: false,\n        pkg: pkga,\n      });\n    } catch (error) {\n      // 404?\n      console.log(\"Bad error\");\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  /**\n   * The component builder for the tab menu element.\n   * @param props - the tab properties defined by {number} index and {string} label.\n   */\n  TabMenuItem: React.FunctionComponent<{ index: number; label: string }> = (\n    props\n  ) => (\n    <StyledTabMenuItem\n      selected={this.state.tabIndex == props.index}\n      onClick={() =>\n        this.setState({\n          tabIndex: props.index,\n        })\n      }\n    >\n      {props.label}\n    </StyledTabMenuItem>\n  );\n\n  render() {\n    const { pkg } = this.state;\n    const { verParam, moduleParam, callableParam } = this.props.match.params;\n\n    // Display placeholder while Package instance is loading from API.\n    if (this.state.isLoading) {\n      return <h1>Loading...</h1>;\n    }\n\n    // Redirect to the latest version by default.\n    if (verParam == undefined) {\n      return <Redirect to={`/packages/${pkg.package_name}/${pkg.version}`} />;\n    }\n\n    // The body of the page is defined by currently active tab.\n    const TabBody =\n      this.state.tabs.length > this.state.tabIndex\n        ? this.state.tabs[this.state.tabIndex].body\n        : null;\n\n    return (\n      <>\n        <NavBar />\n        <StyledContainer>\n          <StyledTitle>\n            {pkg.project_name} {pkg.version}\n            {pkg.repository && (\n              <StyleRepoLink href={pkg.repository}>\n                <GoRepo />\n              </StyleRepoLink>\n            )}\n            {moduleParam && ` / ${moduleParam}`}\n            {callableParam && ` / ${callableParam}`}\n          </StyledTitle>\n          {pkg.created_at && (\n            <StyledDateCreated>\n              Created {pkg.created_at.toLocaleDateString()}\n            </StyledDateCreated>\n          )}\n          <StyledTabMenu>\n            {this.state.tabs.map((tab: Tab, index: number) => (\n              <this.TabMenuItem\n                key={`tab_${index}`}\n                index={index}\n                label={tab.label}\n              />\n            ))}\n          </StyledTabMenu>\n          {TabBody && <TabBody />}\n        </StyledContainer>\n      </>\n    );\n  }\n}\n\nexport const Package = withRouter(InternalPackage);\n","import * as React from \"react\";\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Redirect,\n  RouteComponentProps,\n} from \"react-router-dom\";\n\nimport { StyledAppContainer } from \"./App.styled\";\nimport { Home } from \"./routes/Home\";\nimport { Package } from \"./routes/Package\";\n\nexport type AppProps = RouteComponentProps & {};\n\nexport interface AppState {}\n\nclass InternalApp extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps, state: AppState) {\n    super(props, state);\n    const url = window.location.origin;\n    if (url.includes(\"https\")) {\n      window.location.href = `http:${url.split(\":\")[1]}`;\n    }\n  }\n\n  render() {\n    const location = this.props.location;\n\n    return (\n      <StyledAppContainer>\n        <Switch>\n          {/** Redirect the root to our default route */}\n          <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n          <Route exact path=\"/home\" key={location.key} component={Home} />\n          <Route\n            exact\n            path=\"/packages/:pkgParam/:verParam?/:moduleParam?/:callableParam?\"\n            key={location.key}\n            component={Package}\n          />\n        </Switch>\n      </StyledAppContainer>\n    );\n  }\n}\n\nexport const App = withRouter(InternalApp);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={\"/\"}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}